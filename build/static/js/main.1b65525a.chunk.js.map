{"version":3,"sources":["assets/download.png","assets/download.gif","serviceWorker.js","redux/actions.js","redux/reducers.js","ButtsBar.js","Tips.js","Question.js","Answer.js","Game.js","NavBar.js","Result.js","Timer.js","Loader.js","App.js","redux/ReduxProvider.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","QUESTION_ANSWER","CHANGE_QUESTION","SUBMIT","INIT_QUESTIONS","RESET","changeQuestion","index","type","payload","GlobalState","combineReducers","score","state","arguments","length","undefined","action","questions","map","question","userAnswer","answer","finished","currentQuestion","JSON","parse","stringify","i","Object","objectSpread","ButtsBar","_this","this","react_default","a","createElement","className","onClick","props","onButtonPressed","disabled","extreme","React","Component","Tips","id","tipsList","Question","src","attachment","url","Answer","value","onChange","e","onQuestionAnswer","target","Game","Question_Question","Answer_Answer","Tips_Tips","ButtsBar_ButtsBar","Result","icon","style","width","height","position","top","margin","Timer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","timer","counter","tick","bind","assertThisInitialized","setInterval","setState","clearInterval","Math","floor","Loader","loading","App","loadNewQuizzes","buttonType","dispatch","questionAnswer","_this2","quizzes","fetch","then","results","json","data","item","push","NavBar_Result","Result_Result","Timer_Timer","Game_Game","tips","tip","Loader_Loader","connect","ReduxProvider","initialState","store","configureStore","es","src_App_0","createStore","ReactDOM","render","ReduxProvider_ReduxProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b65525a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.94c2262d.png\";","module.exports = __webpack_public_path__ + \"static/media/download.d7f0e49a.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const QUESTION_ANSWER = 'QUESTION_ANSWER';\nexport const CHANGE_QUESTION = 'CHANGE_QUESTION';\nexport const SUBMIT = 'SUBMIT';\nexport const INIT_QUESTIONS = 'INIT_QUESTIONS';\nexport const RESET = 'RESET'\n\n\n\nexport function questionAnswer(index, answer) {\n    return { type: QUESTION_ANSWER, payload: { index, answer } };\n}\n\nexport function changeQuestion(index) {\n    return {type: CHANGE_QUESTION, payload: { index } };\n}\n\nexport function submit(questions) {\n    return {type: SUBMIT, payload: { questions }};\n}\n\nexport function initQuestions(questions) {\n    return {type: INIT_QUESTIONS, payload: { questions }};\n}\n\nexport function reset() {\n    return {type: RESET};\n}","import { combineReducers } from 'redux';\nimport { QUESTION_ANSWER, CHANGE_QUESTION, SUBMIT, INIT_QUESTIONS, RESET } from './actions';\n\nconst score = (state = 0, action = {}) => {\n    switch (action.type) {\n        case SUBMIT:\n            let score = 0;\n            action.payload.questions.map((question) => {\n                if (question.userAnswer === question.answer) {\n                    score++;\n                }\n            })\n            return score;\n        case RESET:\n            return 0;\n        default:\n            return state;\n    }\n}\n\nfunction finished(state = false, action = {}) {\n    switch (action.type) {\n        case SUBMIT:\n            return true;\n        case RESET:\n            return false;\n        default:\n            return state;\n    }\n}\n\nfunction currentQuestion(state = 0, action = {}) {\n    switch (action.type) {\n        case CHANGE_QUESTION:\n            return action.payload.index;\n        case RESET:\n            return 0;\n        default:\n            return state;\n    }\n}\n\nfunction questions(state = [], action = {}) {\n    switch (action.type) {\n        case RESET:\n            return [];\n        case INIT_QUESTIONS:\n            let newQuestions = JSON.parse(JSON.stringify(action.payload.questions));\n            return newQuestions;\n        case QUESTION_ANSWER:\n            return state.map((question, i) => {\n                return {\n                    ...question,\n                    userAnswer: action.payload.index === i ? action.payload.answer : question.userAnswer\n                };\n            });\n        default:\n            return state;\n    }\n}\n\nconst GlobalState = (combineReducers({\n    score,\n    finished,\n    currentQuestion,\n    questions\n}));\n\nexport default GlobalState;\n","import React from 'react';\n\nexport default class ButtsBar extends React.Component {\n    render() {\n        return (\n            <div>\n                <button className = \"MyButt\" onClick = {() => this.props.onButtonPressed('previousBut')} disabled =  {this.props.index === 0}>Previous</button>\n                <button className = \"MyButt\" onClick = {() => this.props.onButtonPressed('submitBut')} disabled =  {this.props.finished}>Submit</button>\n                <button className = \"MyButt\" onClick = {() => this.props.onButtonPressed('nextBut')} disabled =  {this.props.index === this.props.extreme}>Next</button>\n                <button className = \"MyButt\" onClick = {() => this.props.onButtonPressed('resetBut')}>Reset</button>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Tips extends React.Component {\n    render() {\n        return (\n            <div className=\"Tips\" id = \"style-2\">\n                <p>Tips</p>\n                {this.props.tipsList.length > 0 ? (\n                    <ul>{this.props.tipsList || \"\"}</ul>\n                ) : (\n                        <p>There are no available tips for this question</p>\n                    )}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Question extends React.Component {\n    render() {\n        return (\n            <div className=\"Question\" >\n                <h2 className=\"QuestionNumber\"> Question {this.props.index + 1} </h2>\n                <div className = \"Container\">\n                <img className=\"Image\" src={this.props.question.attachment.url}></img></div>\n                <div className=\"Question\">{this.props.question.question}</div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Answer extends React.Component {\n    render() {\n        return (\n            <div className=\"Answer\" >\n                <input className = \"Inputs\" type=\"text\" value={this.props.question.userAnswer || \"\"} onChange={(e) => {\n                    this.props.onQuestionAnswer(e.target.value);\n                }} />\n            </div>\n        );\n    }\n}","import React from 'react';\n// import './Game.css';\nimport ButtsBar from \"./ButtsBar\";\nimport Tips from './Tips';\nimport Question from './Question';\nimport Answer from './Answer';\n\nexport default class Game extends React.Component {\n    render() {\n        return (\n            <div className=\"Game\" >\n                <Question\n                    question={this.props.question}\n                    index={this.props.index}\n                />\n                <Answer \n                question = {this.props.question} \n                onQuestionAnswer = {this.props.onQuestionAnswer}\n                />\n                <Tips tipsList={this.props.tipsList} />\n                <ButtsBar\n                    index = {this.props.index}\n                    extreme={this.props.extreme}\n                    finished={this.props.finished}\n                    onButtonPressed={this.props.onButtonPressed}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport icon from './assets/download.png';\n\nexport default class Result extends React.Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"Nav\">\n                    <img src={icon} style={{ width: '25px', height: '25px', position: 'relative', top: '5px', margin: '0 10px 0 5px' }}></img>\n                    QUIZ game\n                </nav>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Result extends React.Component {\n    render() {\n        return (\n            <div className = \"Result\">\n                <h1>End of the game!</h1>\n                <h2>Your final score is</h2>\n                <div className = \"ScoreDiv\"><span className = \"Score\">{this.props.score}</span></div>\n                <button className= \"MyButt\" onClick = {() => this.props.onButtonPressed('resetBut')}>Restart Game</button>\n            </div>\n        );\n\n    }\n}","import React from 'react';\n\nexport default class Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            timer: null,\n            counter: 60\n        };\n        this.tick = this.tick.bind(this);\n    }\n\n    componentDidMount() {\n        let timer = setInterval(this.tick, 1000);\n        this.setState({ timer });\n    }\n\n    tick() {\n        if (this.state.counter > 0) {\n            this.setState({\n                counter: this.state.counter - 1\n            })\n        } else {\n            clearInterval(this.state.timer);\n            this.props.onButtonPressed('submitBut')\n        }\n    }\n    render() {\n        return (\n            <div className=\"Timer\">\n                <div className= \"time\">\n                    <span className=\"text\">{Math.floor((this.state.counter / 60) % 60)} min : </span>\n                    <span className=\"text\">{Math.floor(this.state.counter % 60)} sec</span>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport loading from './assets/download.gif';\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>Loading...</h2>\n                <div><img src={loading}></img></div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport Game from \"./Game\";\nimport NavBar from \"./NavBar\"\nimport Result from \"./Result\";\nimport Timer from './Timer';\nimport Loader from './Loader';\nimport { questionAnswer, changeQuestion, submit, initQuestions, reset } from './redux/actions';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.loadNewQuizzes = this.loadNewQuizzes.bind(this);\n    this.onButtonPressed = this.onButtonPressed.bind(this);\n    this.onQuestionAnswer = this.onQuestionAnswer.bind(this);\n  }\n\n  onButtonPressed(buttonType) {\n    switch (buttonType) {\n      case 'previousBut':\n        this.props.dispatch(changeQuestion(this.props.currentQuestion - 1))\n        break;\n      case 'nextBut':\n        this.props.dispatch(changeQuestion(this.props.currentQuestion + 1))\n        break;\n      case 'submitBut':\n        this.props.dispatch(submit(this.props.questions))\n        break;\n      case 'resetBut':\n        this.props.dispatch(reset())\n        this.loadNewQuizzes()\n        break;\n      default:\n        break;\n    }\n  }\n\n  onQuestionAnswer(answer) {\n    this.props.dispatch(questionAnswer(this.props.currentQuestion, answer))\n  }\n\n  loadNewQuizzes() {\n    let quizzes = []\n    fetch('https://quiz2019.herokuapp.com/api/quizzes/random10wa?token=d4d596910885ba5cefe1')\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        data.map((item) => {\n          if (item.question) {\n            quizzes.push(item);\n          }\n        })\n        this.props.dispatch(initQuestions(quizzes))\n      })\n  }\n\n  componentDidMount() {\n    this.loadNewQuizzes();\n  }\n\n  render() {\n    if (!this.props.finished) {\n      // console.log(this.props.questions)\n      return (\n        <div className=\"App\">\n          <NavBar />\n          {this.props.questions.length > 0 ? (\n            <div className=\"Frame\">\n              <div className=\"SubFrame\">\n                <Timer onButtonPressed={this.onButtonPressed} />\n                <Game\n                  question={this.props.questions[this.props.currentQuestion]}\n                  index={this.props.currentQuestion}\n                  tipsList={this.props.questions[this.props.currentQuestion].tips.map((tip) => <li>{tip}</li>)}\n                  onQuestionAnswer= {this.onQuestionAnswer}\n                  extreme={this.props.questions.length - 1}\n                  finished={this.props.finished}\n                  onButtonPressed={this.onButtonPressed}\n                />\n                <p className= \"Creds\">Created by JLL & AM</p>\n              </div>\n            </div>\n          ) : (\n              <Loader />\n            )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <NavBar />\n          <div className=\"Frame\">\n            <div className=\"SubFrame\">\n              <Result score={this.props.score} onButtonPressed={this.onButtonPressed} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state\n  }\n}\n\n// export default App;\nexport default connect(mapStateToProps)(App);\n","import { Provider } from 'react-redux';\nimport GlobalState from './reducers';\nimport { createStore } from 'redux';\nimport React from 'react';\nimport App from '../App';\n\nexport default class ReduxProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            score: 0,\n            finished: false,\n            currentQuestion: 0,\n            questions: []\n        };\n        this.store = this.configureStore();\n    }\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div style={{ height: '100%' }} >\n                    <App/>\n                </div>\n            </Provider>\n        );\n    }\n    configureStore() {\n        return createStore(GlobalState, this.initialState);\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReduxProvider from './redux/ReduxProvider';\n\nReactDOM.render(<ReduxProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}